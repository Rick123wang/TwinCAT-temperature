<div id="Content2_1" data-tchmi-type="TcHmi.Controls.System.TcHmiContent" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="998" data-tchmi-height="656" data-tchmi-creator-viewport-width="1280" data-tchmi-creator-viewport-height="1024">


<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(213, 243, 240, 1)"
}
</script>
<div id="TcHmiEventGrid" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiEventGrid" data-tchmi-height="464" data-tchmi-height-unit="px" data-tchmi-left="21" data-tchmi-left-unit="px" data-tchmi-server-interval="1000" data-tchmi-show-menu-bar="true" data-tchmi-top="57" data-tchmi-top-unit="px" data-tchmi-width="854" data-tchmi-width-unit="px">
<script data-tchmi-target-attribute="data-tchmi-filter" type="application/json">
[
  {
    "path": "domain",
    "comparator": "==",
    "value": "TcHmiEventLogger"
  },
  {
    "logic": "OR"
  },
  {
    "path": "domain",
    "comparator": "==",
    "value": "TcHmiAlarm"
  }
]
</script>
<script data-tchmi-target-attribute="data-tchmi-columns" type="application/json">
[
  {
    "columnName": "type"
  },
  {
    "columnName": "severity"
  },
  {
    "columnName": "timeAndDateRaised"
  },
  {
    "columnName": "text",
    "width": 1,
    "widthUnit": "factor"
  }
]
</script>
<script data-tchmi-target-attribute="data-tchmi-sorting" type="application/json">
[
  {
    "name": "timeRaised",
    "order": "Descending"
  }
]
</script>

</div>
<div id="TcHmiButton_7" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="30" data-tchmi-left-unit="px" data-tchmi-text="%l%L_SendMessage%/l%" data-tchmi-top="574" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%s%PLC1.EventGrid.bMessage%/s%">
</div>
<div id="TcHmiButton_8" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="140" data-tchmi-left-unit="px" data-tchmi-text="%l%L_RaiseAlarm%/l%" data-tchmi-top="574" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%s%PLC1.EventGrid.bAlarm%/s%">
</div>
<div id="TcHmiButton_9" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="250" data-tchmi-left-unit="px" data-tchmi-text="%l%L_ClearAlarm%/l%" data-tchmi-top="574" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%s%PLC1.EventGrid.bClearAlarm%/s%">
</div>
<div id="TcHmiToggleButtonActive" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="747" data-tchmi-left-unit="px" data-tchmi-text="%l%L_Active%/l%" data-tchmi-top="575" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-toggle-group="ShowAlarms" data-tchmi-toggle-state="Normal">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiToggleButtonActive.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "symbolExpression": "%ctrl%TcHmiToggleButtonActive::ToggleState%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEventGrid::Filter%/ctrl%",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/eventFilter",
                  "value": [
                    {
                      "path": "domain",
                      "comparator": "==",
                      "value": "TcHmiEventLogger"
                    },
                    {
                      "logic": "AND"
                    },
                    {
                      "path": "type",
                      "comparator": "==",
                      "value": 1
                    },
                    {
                      "logic": "AND"
                    },
                    {
                      "path": "confirmationState",
                      "comparator": "==",
                      "value": 2
                    }
                  ]
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": []
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiToggleButtonAll" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiToggleButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="857" data-tchmi-left-unit="px" data-tchmi-text="%l%L_AllEvents%/l%" data-tchmi-top="574" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-toggle-group="ShowAlarms" data-tchmi-toggle-state="Active">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "TcHmiToggleButtonAll.onToggleStateChanged",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%ctrl%TcHmiToggleButtonAll::ToggleState%/ctrl%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/ToggleState",
                  "value": "Active"
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%TcHmiEventGrid::Filter%/ctrl%",
                "valueType": "tchmi:server#/definitions/eventFilter",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:server#/definitions/eventFilter",
                  "value": [
                    {
                      "path": "domain",
                      "comparator": "==",
                      "value": "TcHmiEventLogger"
                    }
                  ]
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>
<div id="TcHmiButton_10" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="888" data-tchmi-left-unit="px" data-tchmi-text="Reset
" data-tchmi-top="135" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%s%PLC1..DATA.ResetAlarm%/s%">
</div>
</div>